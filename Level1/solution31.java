package Level1;

import java.util.Arrays;

public class solution32 {
	
	// 행렬의 덧셈
	
	/*
	 * 행렬의 덧셈은 행과 열의 크기가 같은 두 행렬의 같은 행, 같은 열의 값을 서로 더한 결과가 됩니다.
	 * 2개의 행렬 arr1과 arr2를 입력받아, 행렬 덧셈의 결과를 반환하는 함수, solution을 완성해주세요.
	 * 
	 * 행렬 arr1, arr2의 행과 열의 길이는 500을 넘지 않습니다.
	 * 
	 *      arr1             arr2             return
	 * [[1,2], [2,3]]   [[3,4], [5,6]]   [[4,6], [7,9]]
	 *   [[1], [2]]       [[3], [4]]       [[4], [6]]
	 */
	
	public static int[][] solution(int[][] arr1, int[][]arr2){
		// 배열의 x와 y를 넣어주기 위해서 [arr1의길이][arr1의0번지의 길이] 를 작성
		int[][] answer = new int[arr1.length][arr1[0].length];
		
		// arr1의 길이만큼 반복문
		for(int i = 0; i < arr1.length; i++) {
			// arr1[i]번지의 길이만큼 반복문
			for(int j = 0; j < arr1[i].length; j++) {
				// answer[i][j]에 arr1[i][j] 값과 arr2[i][j]값을 더한 것을 대입
				answer[i][j] = arr1[i][j] + arr2[i][j];
			}
		}
		return answer;
	}
	
	public static void main(String[] args) {
		System.out.println(Arrays.deepToString(solution(new int[][] {{1,2},{2,3}}, new int[][] {{3,4},{5,6}})));
		System.out.println(Arrays.deepToString(solution(new int[][] {{1},{2}}, new int[][] {{3},{4}})));
	}

}
